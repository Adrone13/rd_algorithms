/**
 * Є неорієнтований ациклічний граф, що складається з N вершин, пронумерованих від 1 до N.
 * Дано валідний граф-зірка. Потрібно знайти центр вершини.
 *
 * Граф-зірка це такий граф, в якому є рівно одна центральна вершина і рівно N-1 ребер, що з'єднують центр-вершину з іншими.
 * Ребро в такому графі може бути тільки(!) між центральною вершиною та будь-якою іншою вершиною.
 *
 * На вхід подається список ребер (from -> to)
 *
 * Input: [[1,2],[2,3],[4,2]]
 * Output: 2
 *
 * Додатково: чи існує рішення з часом роботи О(1)? :)
 */

// [1,2] | [2,1]
// [2,3] | [3,2]
const input = [
  [10,100],
  [100,35],

  [1,100],
  [100,3],
  [4,100],
];

function findCenter(graph) {
  return graph[0][0] === graph[1][0] || graph[0][0] === graph[1][1] ? graph[0][0] : graph[0][1];
}

console.log(findCenter(input));
